<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[你不知道的神奇网站]]></title>
    <url>%2F2019%2F01%2F19%2F%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E7%A5%9E%E5%A5%87%E7%BD%91%E7%AB%99%2F</url>
    <content type="text"><![CDATA[因为够小众，所以能存活。 搜索 MEZW，搜索引擎，无广告，未被阉割 资源 Bh-Vip，破解软件更新合集 不死鸟，分享为王 音乐 音乐随身听，网页播放器，可搜可听可下 图片 SM.MS，图床]]></content>
      <categories>
        <category>软件大师</category>
      </categories>
      <tags>
        <tag>网站</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows软件库]]></title>
    <url>%2F2019%2F01%2F18%2FWindows%E8%BD%AF%E4%BB%B6%E5%BA%93%2F</url>
    <content type="text"><![CDATA[朋友，这篇文章要密码。 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>软件大师</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一个重大的决定]]></title>
    <url>%2F2019%2F01%2F17%2F%E4%B8%80%E4%B8%AA%E9%87%8D%E5%A4%A7%E7%9A%84%E5%86%B3%E5%AE%9A%2F</url>
    <content type="text"><![CDATA[男人，可以没钱，但一定要帅。 不能妥协的追求每天学得一头油，跑两下就气喘，走路背也挺不直，那还学个鬼，一点男人样都没有。 男人应该什么样？《皇家赌场》里的 Daniel Craig，《搏击俱乐部》里的 Brad Pitt，《实习生》里的 Robert De Niro。三个角色，诠释了男人的三种特质，利落、狂野和讲究。 分析得头头是道，但现实情况是，一个胖大叔挺着个肚子在瞎吹。我不想吹牛，我下定决心，开始健身。 为什么健身 身材不是你健身的目的，快乐也不是健身的目的，甚至健身都不是你的目的。你的目的，是发现你自己，困缚于日常生活中的自己。 我曾经也是单纯为了健身而训练。初始，我跟我的身体对抗，我跟所有人一样，想要更瘦、身材更好。我咬着牙，强迫自己多举起一斤；我攥紧拳头，为了能多跑一千米。不必说，这种目的性很强的健身效果很差，不仅身材没有变好，运动对我来说，都变成了一种压力。 但在后来了解健身、继续训练的过程中，我和身体和解了。其实健身就像一个越狱的过程。我在训练中，渐渐发现了曾经忽视的身体。我开始发现自己身体每一个部位存在的意义，我可以渐渐地了解它们、熟悉它们。我开始明白，健身是自己和自己的身体一起，为了更好的生活去努力。 来自《硬派健身》。 怎么做以前健身这个词给我的感觉是，去运动就好了。现在我打算，扎扎实实从理论学起，然后不断尝试和改进。再借鉴这本书里的一句话 不需要别人再告诉你什么是对的、什么是错的。你可以尊重自己的身体，尊重科学，自己去寻找和发现健身中的各种知识和宝藏。]]></content>
      <categories>
        <category>大叔的目标是型男</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[聊一聊远程控制]]></title>
    <url>%2F2019%2F01%2F09%2F%E8%81%8A%E4%B8%80%E8%81%8A%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6%2F</url>
    <content type="text"><![CDATA[服务器长什么样？就是放在机柜里一层一层的像VCD还不给人碰的玩意，它没接显示器，还被锁起来，那怎么玩它？你一定会说，远程啊。完全正确，但是，该怎么远程？ 有哪些远程方式按照来源不同，大致分为第三方软件远程，和系统自带软件远程。 QQ可能它是很多人唯一知道的远程软件，聊天窗点个按钮就能控制对方电脑，很方便。但大兄弟，能不用就不用吧，别问为什么。 TeamViewer这是一个专业的远程软件，使用简单，缺点是收费，而且被控制的电脑的屏幕会“直播”，你晚上在公司加班，突然发现隔壁的电脑自己在动，位子上却没有人，见鬼了。 MSTSC上面两个都是第三方软件，都免不了下载安装，服务器都讲究性能，额外的安装也意味着额外的性能消耗，所以还是系统自带的比较好。 在Win + r中输入mstsc打开远程桌面连接，输入主机、用户名、密码。一旦连接上，被控制的电脑会锁屏，不存在“直播”，能够防止信息泄露。 Windows系统建议用此方式远程。 SSH连一下个人电脑，或者Windows服务器可以用MSTSC，但是绝大部分服务器都是Linux系统，MSTSC就不好使了，那什么好使？SSH。 我们搭建的博客，无论是使用自己的Linux服务器，还是使用GitHub平台，都会用到SSH。不着急，我们慢慢讲，一个一个来。 Windows连接大法MSTSC基于RDP协议，默认端口3389。 什么是端口你在电脑上一边浏览网页，一边用微信聊天，网络把数据传过来，电脑是怎么知道哪些数据是给哪个程序的？网页就一定是浏览器的？聊天消息就一定是微信的？那你再开个QQ呢？ 电脑就像一栋房子的管理员，每一个要通信的程序都有一间房，管理员不在乎里面住的是谁，它只在乎这间房的房号是多少。每时每刻都有房客写信出去，管理员会帮它填上寄信人“xx号房客”，等收到回信时，管理员就知道该交给谁了。这种管理方式有很多好处 效率提高了。寄信时不登记房客信息，收到回信时就不用核实房客身份，“你是叫微信么，没冒充吧？” 资源节省了。每一个房客只在要寄信时才住到房子里（程序开启时），它交流完就回地下室睡觉去，房间也就空出来了 一共有65536个房间，房号从0到65535，这个房号就是端口，房间里有人就叫占用。每个房客，为了保证自己的房间不被抢，都会指定一个固定的房号，这就是默认端口，当然管理员也可以让它搬到别的房间去，但总归嫌麻烦。有些房号，因为指定住它里面的房客太有名气，所以一说起号码，大家都知道里面是谁。 什么是协议协议只是一种正式的说法，通俗一点就是约定。就像抗战时期的暗号，两个人见面前约定好，见面之后先说什么后说什么，我说什么可以表示我的身份，为了防止别人偷听，我说大的意思是小，我说强的意思是弱，那你如果不知道这个约定，你就不知道我在讲什么。所以，协议并不是要多厉害才能玩，协议内容随便定义，我喊上课你喊起立，这也是一种协议，学校定义出来的老师和学生之间的协议。如果你在不知道协议内容的情况下，听懂了对方话的意思，就叫做破解了协议，黑客干的就是这些事。 什么是RDPRDP，Remote Desktop Protocol，远程桌面协议，专门用于Windows系统的远程连接。如果两台电脑都有遵循此协议的软件，它们就可以用这个软件互相远程连接，MSTSC就是微软官方提供的这种软件。 MSTSC，Microsoft Terminal Services Client，微软终端服务客户端，是遵循RDP协议的连接工具。现在看“MSTSC基于RDP协议，默认端口3389”这句话，有没有舒服了一点。 权限设置连接之前，需要允许自己的电脑被远程控制，操作步骤参考 Win7系统怎么开启远程桌面？Win7远程桌面怎么用。远程协助和远程桌面是不同的功能，参考 Windows的远程协助和远程桌面的区别，我们只用配置远程桌面。 在远程设置-选择用户-添加的时候，发现自己的用户搜索不到，解决办法是 右键计算机，选择管理 选择系统工具-本地用户和组-用户 出现一个列表，表头是名称和全名 发现自己的用户名是全名，而选择用户那里取的是名称 将名称改成和全名一致 注销或重启 Linux连接大法本章重难点。 什么是SSHSSH，Secure Shell，安全外壳协议，是一种加密的网络传输协议，任何网络服务都可以通过SSH实现安全传输，但最常见的用途是远程登录系统，默认端口22。参考维基百科 Secure Shell。 注意名字，它不像RDP叫远程桌面，它叫安全外壳，也就是说它强调的是安全，正因为这个特点，它有更广泛的应用，而不仅仅当作远程登录。例如，我们部署博客到GitHub，在配置文件_config.yml中填写 12345deploy: type: git # 按SSH协议的格式，写出的地址，表示使用SSH协议，把我们生成的博客页面，传输过去 repo: git@github.com:xiaomin/xiaomin.github.io.git branch: master 也可以改成 12345deploy: type: git # 按HTTPS协议的格式，写出的地址，表示使用HTTPS协议，把我们生成的博客页面，传输过去 repo: https://github.com/xiaomin/xiaomin.github.io.git branch: master 这两个地址指向的是同一个地方，只不过使用的传输协议不同，但最终都能达到部署的目的。如果听起来有点绕，可以这么理解，你想让助理帮你寄一个包裹，于是你填了一个单，用前一种写法，表示你想让助理寄顺丰，用第二种写法，表示你想让助理寄平邮。包裹总能寄到，但寄顺丰更方便。 HTTPS也是一种加密的网络传输协议，我们下次再讲。部署博客，SSH比HTTPS好用，因为不用输入用户和密码，那SSH是如何做到这一点的？ SSH验证方式SSH有两种验证方式 用户和密码，登录时所有信息会被加密，但可能会有别的服务器在冒充真正的服务器，无法避免被“中间人”攻击 公钥和私钥，用户为自己创建一对密钥，然后将公钥放在服务器，私钥保存在自己的电脑，连接时无需用户和密码，而且可以避免被“中间人”攻击，因为冒充的服务器没有自己保存的私钥 这种公钥和私钥的加密方式，叫做非对称加密。 非对称加密非对称加密，也称为公开密钥加密，是密码学的一种算法，它需要两个密钥，一个是公开密钥，另一个是私有密钥；一个用作加密，另一个则用作解密。使用其中一个密钥把明文加密后所得的密文，只能用相对应的另一个密钥才能解密得到原本的明文，甚至连最初用来加密的密钥也不能用作解密。由于加密和解密需要两个不同的密钥，故被称为非对称加密。不同于加密和解密都使用同一个密钥的对称加密，虽然两个密钥在数学上相关，但如果知道了其中一个，并不能凭此计算出另外一个。因此其中一个可以公开，称为公钥，任意向外发布；不公开的密钥为私钥，必须由用户自行严格秘密保管，绝不透过任何途径向任何人提供，也不会透露给被信任的要通信的另一方。 这段话取自维基百科 公开密钥加密，解释得很清楚，就是有点长，稍微概括一下 公钥用来加密，私钥用来解密 公钥和私钥是一对，用公钥加密的信息，它自己都无法解密，只有与它对应的私钥才能解密 公钥可以随便给其他人，不怕泄露，私钥只能自己保管 信息传输过程中，只有公钥会经过网络，私钥始终在自己电脑，这样传输过程中私钥不会被窃取 生成SSH密钥对打开命令行 123# -t 密钥类型# -C 备注$ ssh-keygen -t rsa -C "xiaomin@qq.com" 确认之后系统会提示输入存储位置，和passphrase（口令），直接回车无需理会，参考 ssh-keygen基本用法。生成之后，打开个人文件夹，也就是在开始菜单中点击自己的用户名，或者打开C:\Users\xiaomin，然后找到.ssh并进入，可以看到三个文件 id_rsa，私钥 id_rsa.pub，公钥 known_hosts，已知主机，所有使用SSH连接过的主机的信息 用记事本打开id_rsa.pub，复制里面所有内容，谁给你粘贴，你就能控制谁。 粘贴到GitHub直接在网页上操作，非常简单，参考 git详细教程–光速学会安装、提交托管与sshkey创建，写得很详细，而且有截图，往后翻翻。 测试是否配置成功 12# 注意，这个不是自己的邮箱，不用改$ ssh git@github.com 能看到自己GitHub的用户名，表示成功。 粘贴到服务器123456# 进入Home$ cd ~# 新建.ssh目录$ mkdir .ssh$ cd .ssh$ vim authorized_keys authorized_keys就是用来记录公钥的文件，每一行代表一个公钥，所以如果~/.ssh/authorized_keys已存在就无需创建，直接空一行，粘贴自己的就行。测试是否配置成功 12# 注意，这个不是自己的邮箱，是用户@服务器地址，需要改$ ssh git@xiaomin.com 登录成功，并且无需密码，表示成功。]]></content>
      <categories>
        <category>玩玩博客</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>GitHub</tag>
        <tag>SSH</tag>
        <tag>HTTPS</tag>
        <tag>Linux</tag>
        <tag>MSTSC</tag>
        <tag>RDP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[博客的人民币玩法]]></title>
    <url>%2F2019%2F01%2F05%2F%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%BA%BA%E6%B0%91%E5%B8%81%E7%8E%A9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[个人博客就想游戏里的装备，要想更厉害一点，总归要花钱的，不过这个钱花得很实在。 绑定个人域名域名被发明出来原本只是方便人们记忆，给IP起个名字，但现在有了品牌的意义。说高级一点，这也是一笔无形资产。 买买买域名很便宜，建议在 阿里云 上购买。个人观点，域名除了要有意义以外，最重要一点是，短。很多人拿自己名字的全拼去申请域名，比如zhangsanfeng.com，字母太多敲得累，如果换成拼音的首字母zsf.com，是不是一下子就显得高大上了？但这域名肯定天价，com、cn、net都比较贵，那就换别的后缀，vip、xyz、top也很好。 申请流程比较繁琐，填资料交钱备案，中间有不明白的可自行百度，等域名拿到手的那一刻，一切等待都是值得的。 绑定打开阿里云的控制台，找到域名绑定，如果你有自己的服务器，就填写一个A记录，表示将域名指向一个IP，然后在记录值里写上IP。 如果你是用GitHub作博客，就填写一个CNAME记录，表示将域名指向另一个域名，然后在记录值里写上自己GitHub的博客地址，例如zhangsanfeng.github.io。还没完，现在绑定并没有生效，需要在博客里改点东西 本地打开博客项目 找到source文件夹，点进去 新建文本文档CNAME.txt 输入自己的域名，例如zhangsanfeng.com，保存 将CNAME.txt重命名为CNAME 部署到GitHub 大功告成，浏览器访问zhangsanfeng.com。 使用自己的服务器如果你不喜欢用GitHub作博客，想使用自己的服务器，那你肯定是个搞IT的，因为没有普通用户会为了一个博客而去自己搭服务，门槛比较高，也太折腾。但文章写到这，就把它一并讲了，接下来的内容各位选择性略过。 项目结构Hexo项目中，有这些文件和文件夹 node_modules，hexo依赖包 public，hexo生成的页面，部署的就是里面所有的静态资源 scaffolds，命令生成文章等的模板 source，自己实际写的文章 themes，主题 _config.yml，整个博客的配置 db.json，source解析后得到的 package.json，项目所需模块的配置信息 Hexo部署的原理就是，把public里的所有内容同步到服务器的HTTP服务中。 部署思路Hexo的页面全部是静态的，因此使用Nginx做HTTP服务，性能好配置也简单。剩下的问题是如何同步，还是用Git，我们在服务器创建一个Git仓库，这样做的目的有两个 结合hexo-deployer-git插件，实现一键部署，解决文件从本地到服务端的问题 配置Git钩子，在每次Git接收到更新时，触发钩子，将仓库中文件同步到Nginx的网站根目录 参考 阿里云VPS搭建自己的的Hexo博客。至于钩子是什么，引用 官方文档 一句话 Git 能在特定的重要动作发生时触发自定义脚本。 创建Git仓库我用的是CentOS系统，因此用yum安装Git 1$ yum install -y git 指定裸仓目录 12$ cd /home/git$ git init --bare blog.git 在Hexo的配置里，使用非root用户连接服务器更安全。增加只操作Git的用户git，并改变仓库目录的所属，否则git用户无权访问 12$ adduser git$ chown -R git:git blog.git 配置Nginx先安装 1$ yum install -y nginx 查看Nginx配置文件路径，然后修改 12$ nginx -t$ vim /etc/nginx/nginx.conf 找到下面这一段 123456789101112131415161718192021server &#123; listen 80 default_server; listen [::]:80 default_server; server_name zhangsanfeng.com; # 绑定的域名 root /usr/local/blog; # 网站根目录 # Load configuration files for the default server block. include /etc/nginx/default.d/*.conf; location / &#123; index index.html; # 默认首页 &#125; error_page 404 /404.html; location = /40x.html &#123; &#125; error_page 500 502 503 504 /50x.html; location = /50x.html &#123; &#125;&#125; 修改上面三个地方。接下来创建网站根目录并修改所属，启动Nginx 123$ mkdir /usr/local/blog$ chown -R git:git /usr/local/blog$ service nginx start 注意，一定要修改网站根目录的所属，否则下面配置的Git钩子会因为无权访问而不生效。 配置hooks仓库中的hooks目录，就是存放钩子的地方，重命名post-update.sample为post-update 123$ cd /home/git/blog.git/hooks$ mv post-update.sample post-update$ vim post-update 将post-update修改为 12#!/bin/shgit --work-tree=/usr/local/blog --git-dir=/home/git/blog.git checkout -f 最后，确保post-update拥有执行权限。 修改博客配置和部署到GitHub的过程是一样的，只不过要修改部署地址，打开全局配置文件_config.yml，找到deploy节点 1234deploy: type: git repo: git@zhangsanfeng.com:/home/git/blog.git branch: master 同样需要部署插件hexo-deployer-git，没安装的话，在博客项目中打开命令行 1$ npm install hexo-deployer-git --save 去吧皮卡丘部署命令和之前一样，毕竟整个过程只是服务端变了，客户端除了一个地址，其余都不用动 1$ hexo g -d 参考 基于Hexo、git、nginx静态博客实现自动部署功能。使用自己的服务器作博客，就完成了，但还有几点不完美的地方，其中一个是没有配置SSH，但这个篇幅较大，所以下次再讲。]]></content>
      <categories>
        <category>玩玩博客</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>hooks</tag>
        <tag>GitHub</tag>
        <tag>Hexo</tag>
        <tag>Nginx</tag>
        <tag>HTTP</tag>
        <tag>CentOS</tag>
        <tag>SSH</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自己动手搭建博客]]></title>
    <url>%2F2019%2F01%2F04%2F%E8%87%AA%E5%B7%B1%E5%8A%A8%E6%89%8B%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[搭博客不难，小白也能做，但这里的小白也不是说一点门槛都没有，毕竟涉及到命令，而命令又都是英文。不用担心，即使你不懂代码不懂英文也没关系，我也不懂，但只要照着做就能搭好，所以我说的门槛是指，耐心。 下几个软件工欲善其事必先利其器，先介绍几个软件，和我们使用它的目的。但是介绍之前，可以先看看 博客效果，随便挑，有喜欢的主题就记下名字。 GitHubGitHub是用来存放博客的空间，以后我们的博客页面就放在这里，别人通过它来看我们的博客。 它不是个软件，而是个网站，不用下载只需注册。打开 官网，是的你没有看错，这个网站全部是英文，但不影响使用。注册教程参考 GitHub的注册与使用 的第一部分。 有了账号之后，新建仓库。GitHub是一个功能强大的社区，不仅博客，什么玩意都能往上面放，只不过博客有点特殊，要使用它的博客功能，就必须在新建仓库时取特定的名字，格式是xxx.github.io，比如你的账号是xiaomin，那仓库名字就写xiaomin.github.io，这个仓库名字同时也是你的博客网址，以后别人想看你的博客，打开浏览器，输入 xiaomin.github.io 就可以了。 GitGit不就是GitHub的前三个字母么？没错，但它们不一样，而且它们是配套使用的。GitHub用来存放，Git用来管理。 举个例子，你在自己电脑上写了篇文章，然后想把它放到博客上去，你会怎么做？打开GitHub登录账号再点击上传么？朋友，不是这么玩的，一整套博客不是只有文章就够了，还需要各种功能，这些功能是靠其他的文件实现的，那所有文件我们都一个一个手动上传么，当然不可能。引申一下，这里的上传，或者说复制，专业术语就是部署。所以不用觉得搞电脑很难，只不过是一些名词听不懂而已，理解后才发现它也就那样。每个行业都是如此，都有专业术语，用来过滤外行人。 我们用Git的其中一个原因就是它的部署功能，写完博客，一行命令就把所有文件复制过去了。Git是一个软件，到 官网 下载，也是全英文，下载后安装，一直点下一步就行，不会的话参考 Windows下Git的下载与安装。 Node.js这玩意是一个运行环境，不用太较真，只用知道要安装它就够了，打开 官网，有两个绿色的按钮，LTS（长期支持版）和Current（当前最新版），下载LTS版，安装时一直下一步。 检查是否安装成功 Win + r快捷键调出运行 输入cmd点确定 在黑窗口中输入node -v 回车之后出现v10.15.0，表示安装成功 这里v后面的数字不一定是10.15.0，它是安装的版本，只要node -v命令有效就可以了，具体版本是多少不重要。 Hexo这才是搭建博客的主角，我们在自己电脑上写完文章，使用Hexo将文章制作成精美的页面，再使用Git将页面部署到GitHub。Hexo不能单独安装和运行，它需要Node.js环境，所以在安装Hexo之前，确保Node.js已经安装成功。 有兴趣的话可以看看Hexo的 官网，找不到下载的地方对不对，都说过它不能单独安装和运行，它的安装方式比较特别 桌面上点击右键，选择Git Bash Here（使用上面的cmd也可以） 在黑窗口输入npm install hexo-cli -g（这里的安装命令npm就是由Node.js提供） 回车之后开始下载和安装 检查是否安装成功，输入hexo -v 回车之后出现一系列版本号，安装成功 工欲善其事必先利其器，至此，器已经有了，但器还不利，接下来对器作一些配置，让器利起来。 敲几行命令命令，或者说指令，就是我们在黑窗口敲的那些英文。而黑窗口，叫做命令行，专门用来执行命令。用命令行操作电脑，更加方便，复制粘贴回车一气呵成，想点错都点不了。 新建博客项目 新建一个空文件夹，比如取名blog 进入blog文件夹，右键，选择Git Bash Here 执行命令hexo init 等待，blog文件夹里会生成许多文件 现在，我们有了最原始的博客项目blog，以后更换主题就在这里面做，文章也在这里面写。 看看原版效果 切换到刚才的命令行（如果关闭了，就进入blog文件夹，右键，选择Git Bash Here） 执行命令hexo server（也可以简写为hexo s） 等待，命令行出现INFO Hexo is running at http://localhost:4000 . Press Ctrl+C to stop. 打开浏览器，输入 localhost:4000 这个hexo s，也是以后修改主题或写完文章，在部署之前，在自己的电脑预览一下效果的命令。如果想停止预览，就切换到刚才的命令行，按Ctrl + C。 配置一键部署要实现一键部署，需要先告诉Hexo部署到哪去，这个地址在哪找呢？打开GitHub并登陆，再点击自己的项目xiaomin.github.io，右侧有一个绿色的按钮Clone or download，点开后出现一个地址https://github.com/xiaomin/xiaomin.github.io.git，把它复制下来。找不到这个地址可参考 此文章。 接下来，我们要把地址粘贴到博客项目里。在blog文件夹，有一个非常重要的配置文件_config.yml，用记事本打开它，找到最后的deploy，然后将它修改成 1234deploy: type: git repo: https://github.com/xiaomin/xiaomin.github.io.git branch: master 中间的repo改成刚才复制的地址。除此以外，Hexo需要一个工具才能将它和Git联系起来 切换到命令行 执行命令npm install hexo-deployer-git --save 安装完成 剩下最后一步，Git在使用前，要添加一个用户名和一个邮箱，打开命令行执行 12$ git config --global user.name xxx$ git config --global user.email xxx@xxx.com 假如你的用户名是xiaomin，邮箱是123456@qq.com，那么就写 12$ git config --global user.name xiaomin$ git config --global user.email 123456@qq.com 注意，这里的$符号不要复制到命令行里去了，它是一个提示符，而不是命令本身，它表示“请输入命令”。细心的话你会发现，在敲每个命令前，都有这么一个符号。 去吧皮卡丘之前讲过，这个博客项目的原理是，我们在自己电脑上写完文章，使用Hexo将文章制作成精美的页面，再使用Git将页面部署到GitHub。现在我们制作页面，还是切换到命令行 1$ hexo generate 后面那个单词有点长，可以简写成hexo g。执行命令后会生成很多文件，然后我们部署过去 1$ hexo deploy 这个命令也有点长，可以简写成hexo d。执行命令后会提示输入用户名和密码，把之前注册的GitHub账号和密码输入进去。大功告成，打开浏览器，输入 xiaomin.github.io。 最后说两句要打造一个优秀的博客，需要打磨的地方有很多，但都不难，网上大把的教程。这篇文章只是最基础的入门，博客从无到有，但从有到精就看个人发挥了。 更换主题原版的博客已经搭建成功，是不是很丑？还记得本文开头的地方，看到的 博客效果 么？把喜欢的主题的名字复制下来，到GitHub上搜索，就能找到源代码，下载下来扔到博客项目里，再应用一下新主题，博客就变身了。这里有一份参考 如何更换hexo博客主题。 编写文章以后文章写在哪里呢？博客文件夹下的source/_posts，不明白可以到 官网 上看视频。写完之后按照前面的方法部署，再用浏览器去看。每次部署要敲两行命令，可以精简到一行 1$ hexo g -d 部署前建议先执行 1$ hexo clean 它的作用是删除之前制作的页面，这样可以避免一些莫名其妙的错误。]]></content>
      <categories>
        <category>玩玩博客</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>GitHub</tag>
        <tag>Hexo</tag>
        <tag>Node.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我开博客了]]></title>
    <url>%2F2018%2F12%2F31%2F%E6%88%91%E5%BC%80%E5%8D%9A%E5%AE%A2%E4%BA%86%2F</url>
    <content type="text"><![CDATA[一直以来，我都很低调。从非主流时期的QQ空间，再到现在的朋友圈，我都没有发过动态。这么说来，我应该是一个过于传统的人。 为什么开始玩博客既然开始玩了，就说说玩的理由。 做笔记是刚需信息爆炸的时代，不多学点东西，真只能搬砖了。而从小被教育，好记性不如烂笔头。知识写在笔记里，比用脑袋记，更保险。 费曼学习法如果仅仅把知识记下来，那并不代表弄懂了，更不代表学会了。有个叫费曼的人，他既是诺贝尔奖获得者，同时也是一名教师，有过一句名言 I couldn’t reduce it to the freshman level. That means we really don’t understand it.要是不能把一个科学概念讲得让一个大学新生也能听懂，那就说明我自己对这个概念也是一知半解的。 而费曼的老师也有过一句类似的话 One can only learn by teaching.一个人只有通过教学，才能学会什么。 所以，试着写出深入浅出、通俗易懂的文章，是最有效的学习方法。 仪式感以上两点只是在强调写作对学习的重要性，好像和博客没什么关系，毕竟市面上有很多优秀的笔记类软件能够满足这一需求，并不一定非博客不可。比如有道云笔记、印象笔记、OneNote，这些都很不错，为什么不用这些来写呢？ 因为懒。要把抽象的概念，解释成小白都能听懂的语言，需要优秀的表达能力和扎实的学习功底，这是一件费时费脑的事。更何况写出来的东西，明知道只有自己会去看，那还花那心思打磨它干啥？ 所以写博客能提升的是一种仪式感，虽然博客可能根本没人看，但在写之前，知道这是会发表出去的，就会要求自己把它写得好看一点。这一点对于传统且脸皮薄的我，非常有效。 分享学得更多这是一个很神奇的现象，如果把自己的心得和技巧藏着掖着，害怕别人知道从而超过自己，人就不会进步；但倘若大大方方分享出来，反而不会陷入匮乏，而是得到更多。这很玄乎，你分享了一些东西，听的人也会自然而然分享出自己的干货。 文章发表到博客就是最划算的分享，因为你只用写一次，然后告诉大家你的博客地址就完事了。 个人品牌量变带来质变，如果坚持写下去，总有一天博客会成长起来然后带来收益，就像小树苗长成大树供人乘凉，只要栽培够久。就算它以后挣不了钱也没关系，而且我写博客也不是为了挣钱，它将成为自己努力的见证和思考的结晶，到老了就是一笔个人成就。 如果说等它成长过于漫长，那么至少它可以立刻起到一个装x的作用。比如有朋友遇到一个问题，“这很好解决的，我写过一篇文章，你去我博客看吧。” 选择什么样的博客说完了为什么玩，就到了选择玩哪个的时候了。 MarkDown格式如果你还在用Word写文章，那么你真的已经out很久了。使用MarkDown格式写作，能给人更大的沉浸感，更关键的是，一些博客平台支持MarkDown格式的结构解析，这会使文章看起来很有条理，还有最重要的一点，它是纯文本，方便迁移。 迁移是什么意思呢？假设，你觉得简书这个平台不错，于是你使用Word写了很多篇文章，但之后你觉得简书不好，想把文章放到微信公众号上去，于是你打开Word，把文章复制过去，但突然发现公众号上显示的效果和以前不一样，你说了一句我c，然后一行一行对照着修改回来。 但是，如果你用的是MarkDown格式，那就没有这些烦恼了，无论是博客平台，还是笔记类软件，或者是公众号、知乎，包括我下面说的自己搭建博客，只要你想要，随便哪都可以发，显示效果包你满意。 自己搭建更自由虽然市面上有很多优秀的博客平台，但始终比不上自己搭建的，因为无法做到个性化，大家博客都长一个样，怎么突出自我？也许官方会出几个皮肤，但还要你花钱买。再者，博客的功能只能由官方说了算，想加点自己的东西都不行，这玩起来没多大意思，装x效果也达不到。 反过来，自己搭建一个博客，再申请一个自己的域名做绑定，整个感觉都会不一样。更何况，搭建博客免费且简单。]]></content>
      <categories>
        <category>玩玩博客</category>
      </categories>
      <tags>
        <tag>MarkDown</tag>
      </tags>
  </entry>
</search>
