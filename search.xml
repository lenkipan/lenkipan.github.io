<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[健身之前弄懂几个概念]]></title>
    <url>%2F2019%2F02%2F21%2F%E5%81%A5%E8%BA%AB%E4%B9%8B%E5%89%8D%E5%BC%84%E6%87%82%E5%87%A0%E4%B8%AA%E6%A6%82%E5%BF%B5%2F</url>
    <content type="text"><![CDATA[呕心沥血之作。 三大营养物质减肥减的是什么？是脂肪。给人体提供能量的，有三大营养物质，它属于其中之一。 碳水化合物又称糖类，一般由碳、氢与氧三种元素所组成，广泛分布于自然界。糖类分为单糖、双糖和多糖。去医院打吊针打的葡萄糖，就是一种单糖，它能被人体直接吸收利用。其他不能被直接吸收的糖，会在体内先转化为葡萄糖，再被吸收利用。所以，我们每天吃各种各样的糖，这些糖最终转化成葡萄糖，用于我们日常生活的能量开销。一旦生病，医生判断我们营养不良，就直接往我们的血管里注射葡萄糖，让我们快速跟上营养。 糖类是人体首要的供能物质。 脂肪如果糖类相当于身体的电池，那么脂肪就是身体的充电宝。人类、包括一些动物，经过漫长的进化，拥有一项神奇的技能，就是几天不进食，也不会饿死。因为严苛的生存环境，不能保证我们每天都有东西吃，所以每次我们有的吃时，身体不会浪费多余的能量，它会把这些能量存储起来变成脂肪，这样下次没得吃时，就分解脂肪供能。不过，身体没想到的是，现在生存环境变了，我们随时可以获取能量，再也不用担心饿肚子，于是脂肪越存越多，我们成了胖子。 脂肪的来源主要有两个，一是摄入的多余的糖类，二是摄入的油脂，这些油脂包括猪油、豆油、奶油，它们本身就是脂肪，经过消化吸收后又再度转变为脂肪。脂肪的作用有以下几点 给人体提供热量。脂肪在体内氧化后，变成二氧化碳和水，同时释放出热量。由脂肪所产生的热量约为等量的糖类的2.2倍 保持体温。因为脂肪不是良好的导热体，所以皮下的脂肪组织是保护身体的隔离层，能防止体温的发散 脂肪是构成身体细胞的重要成分之一。尤其是脑神经、肝脏、肾脏等重要器官中含有很多脂肪 保护内脏器官，滋润皮肤，防震，溶解营养素 蛋白质蛋白质是一切生命的物质基础，是肌体细胞的重要组成部分，是人体组织更新和修补的主要原料。换句话说，没有蛋白质就没有生命。 蛋白质的基本组成单位是氨基酸。人体摄入的食物首先是大分子的蛋白质，在消化过程中，大分子蛋白质分解为小分子的氨基酸，再通过吸收过程吸收。氨基酸进入细胞后再进行蛋白质的合成，形成肌肉、毛发、骨骼、酶等等。 三大营养物质在体内都可以进行氧化分解，作为能源物质使用。但它们供能有着先后顺序，它们按照糖类、脂质、蛋白质的顺序供能。详细可参考 三大营养物质 营养学 杀脂肪系列–三大营养物质 健身三板斧一提起健身，总会听到减脂、增肌、塑形。但它们到底指的是什么？ 减脂顾名思义，减掉脂肪，适用于肥胖人群。这都没什么好说的，但先搞清楚一个问题，什么样叫肥胖？或者说，体重重的人，就一定胖么？ BMI，Body Mass Index，身体质量指数，是目前国际上常用的衡量人体胖瘦程度以及是否健康的一个标准。计算公式是 身体质量指数（BMI） = 体重（kg） / 身高^2（m） 例如一个人的身高为1.75米，体重为68公斤，那么他的BMI是 68 / (1.75^2) = 68 / 3.0625 = 22.2 当BMI指数为18.5～23.9时属于正常，参考 百度百科。按照这个标准，很多人并不属于肥胖的范围。有可能一个胖子和一个肌肉男，身高和体重完全一样，身体质量指数也一样。那怎么分辨一个人胖不胖？应该计算体脂率。 体脂率，即人体内脂肪重量在人体总体重中所占的比例。计算公式是 男性体脂率 = {腰围（cm） × 0.74 - [体重（kg） × 0.082 + 44.74]} / 体重（kg）女性体脂率 = {腰围（cm） × 0.74 - [体重（kg） × 0.082 + 34.89]} / 体重（kg） 例如一名成年男性的腰围是84厘米，体重是65公斤，那么他的体脂率是 [84 × 0.74 - (65 × 0.082 + 44.74)] / 65 = (62.16 - 50.07) / 65 = 18.6% 成年人的体脂率正常范围分别是男性15%～18%，女性20%～25%，参考 百度百科。体脂率相较于BMI，更能体现人的肥胖程度。 知道了自己胖不胖，接下来说说在实际减脂时容易陷入的一个误区，节食。上面讲过，脂肪是身体存储的能量，可以让我们在没东西吃时不被饿死。按照这个理论，只要我们故意饿一饿自己，那就能自然而然瘦下来了。没错，瘦是肯定会瘦的，但人会变傻。因为，我们的祖先是从无数次饥荒中生存下来的强者，我们的身体进化出与貔貅一样的能力，对营养只进不出。所以，在节食时，身体的本能反应是，饥荒来了，现在有的脂肪要省着点用，怎么省呢？能克扣的就克扣，首要目的是活下去，而不是活得好。我们在脂肪的作用中介绍过，脂肪是构成身体细胞的重要成分之一，尤其是脑神经、肝脏、肾脏等重要器官中含有很多脂肪。一旦身体把这部分的脂肪给扣了，我们的智力和免疫力下降，就是显而易见的结果。反过来，当我们无法忍受节食的痛苦，开始暴饮暴食的时候，身体就开心了，终于等到了营养，赶紧存起来，不然下一次饥荒怎么熬过去？于是反弹出现。 增肌顾名思义，增加肌肉，适用于瘦弱人群。也许很多人只想要减肥，并不在乎肌肉有多少，但实际上，训练肌肉能更快速、更健康地减肥。 基础代谢率，简称BMR，是决定减肥效果的关键指标，参考 维基百科 的解释 BMR，Basal Metabolic Rate，是指在自然温度环境中，恒温动物（比如人）的身体在非剧烈活动的状态下，处于非消化状态，维持生命所需消耗的最低能量。这些能量主要用于保持各器官的机能，如呼吸（肺）、心跳（心脏）、腺体分泌（脑及其他神经系统）、过滤排泄（肾脏）、解毒（肝脏）、肌肉活动等等。基础代谢率会随着年龄增加或体重减轻而降低，而随着肌肉增加而增加。 为什么节食不起作用？因为身体太小气了，进的多出的少，进的少出的更少。所以，减肥的重点应该放在出的部分，要想办法让身体大方起来。基础代谢率就是用来衡量身体是否大方的指标，只要它上去了，我们走路所消耗的能量，可能和别人跑步所消耗的一样多，如此一来，减肥岂不简单？那如何增加基础代谢率？答案是增加肌肉。 既然讲到了基础代谢率，就顺便聊聊另一个更大众的词汇，卡路里。 卡路里，由calorie音译而来，缩写为cal，是计算热量的单位。卡的单位很小，生活中普遍采用千卡，俗称大卡，符号是kcal，有时也写作Cal。因为热量来自于三大营养物质，所以只要知道了食物的三大营养物质的含量，就能计算出该食物给人体提供了多少热量。它们的换算关系是 1g碳水化合物 = 4千卡 1g脂肪 = 9千卡 1g蛋白质 = 4千卡 我们每天应该吃多少卡路里的食物？按照 维基百科 的说法 营养学建议，以基础代谢率（BMR）算，一般成年人一日吸收的热量在1800至2400大卡，太多或太少都不健康。 塑形这个词很神奇，很多人都在用，但说不出它的意思。于是我到网上查了查，发现网上也没有一个普遍的定义。那我们自己分析一下。 塑形，从字面上看，应该是塑造形状，可是塑造什么的形状？既然是健身词汇，那肯定指身材的形状，好的身材取决于三点 骨骼。包括身高、腿长以及各种比例 肌肉多 脂肪少 首先，骨骼没办法改变；其次，肌肉多靠增肌，脂肪少靠减脂，这两个和塑形没关系。因此，塑造身材的形状的说法不成立。 再猜测，不是指身材，而是指肌肉，塑造肌肉的形状。想法很好，很可惜，肌肉的形状练不出来，因为它由基因决定，就像有6块腹肌的人，再怎么努力，也不可能变成有8块，训练和拉伸是无法让肌肉变得更长更细的。如果不改变形状，只想让肌肉更加明显，更有线条感，怎么做到？有句俗话，肌肉是瘦出来的。想要好身材，必须要有足够的肌肉量作为基础，而且体脂率得够低才能“显示”。 综上所述，塑形并不存在，健身最核心的方法是减脂和增肌，参考 所谓的“塑形”真的存在吗？ 有氧运动与无氧运动要想知道什么运动适合自己，避免听到别人的推荐就盲从，这两个的区别得了解。 运动上的不同我们知道，汽车发动机通过燃烧汽油产生动力，汽油的燃烧离不开氧气。同样，人类运动中也需要燃烧燃料以获得动力。当然，人类的“燃料”是糖类、脂肪和蛋白质。 与发动机燃烧汽油一样，人类在燃烧（即氧化）“燃料”时也需要氧气助燃。人们在运动时大口地呼吸，空气中的氧气通过肺泡进入到血液循环系统之中，然后随着动脉血流向全身的组织细胞中，这个过程需要一定的时间。 运动强度比较小时，耗能也比较少，氧气有时间被输送到组织细胞中，身体内的能量得到了充分的燃烧，满足运动的能量需要，这样的运动就是有氧运动。低强度、能长时间进行的运动，基本上都是有氧运动，比如快走、慢跑、长距离慢速游泳、慢骑自行车等。有氧运动需要大量呼吸空气，对心、肺是很好的锻炼，可以增强肺活量和心脏功能。 而当人们在做剧烈的运动时，比如100米跑，10多秒钟就已经跑过了终点，而起跑时吸的那口氧气，却根本还来不及到达细胞当中去参加燃烧的活动。也就是说，氧气还没有起作用，而运动就已经结束了。人在利用氧气的过程中，有一个相当大的时间差，这个时间差决定了剧烈的、短时间的运动，成为了无氧运动。比如100米短跑，200米短跑，100米游泳，举重等都是无氧运动。 代谢上的不同有氧运动与无氧运动的根本区别, 在于他们之间的能量代谢系统不一样。因此，有必要谈一谈有氧代谢与无氧代谢。 有氧代谢是缓慢但持久的供能系统，主要燃料是碳水化合物和脂肪。静息时，身体有持续的氧气供应用来产生能量，维持基础代谢率。当我们开始运动，比如从坐着到起来走动，我们的能量需求增加，导致我们呼吸与心跳略加快。只要运动强度增加不是太多、太快，我们的身体会调整呼吸与心跳，有氧代谢仍然能保持身体能量需要，我们就不会感到太疲惫。基本上我们能持续进行三分钟以上的运动依靠的都是有氧代谢供能系统。 当运动强度增大到一定程度，能量需求超过有氧代谢系统的供给能力时，无氧代谢系统就开始启动。无氧代谢只能使用糖分为燃料，特点是供能迅速但是产能量比较少。这也就是为什么大重量举重时我们举十多下就会力竭的原因之一。无氧代谢的最大缺点是糖分不充分燃烧，产生乳酸。乳酸的堆积导致肌肉细胞环境酸碱度降低，这是高强度运动时容易疲劳的另一个主要原因。无氧代谢运动一般不能超过两分钟。很多时候需要休息一下，让体力恢复，等血液把无氧代谢废物带走，才能继续运动。 没有绝对的界限以上谈了有氧运动与无氧运动的区别。但事实上，有氧与无氧很少独立存在，也不会一下子从一种代谢状态转换到另外一种状态，更多时候他们互相重叠，只不过有时候有氧代谢占主导，有时候无氧代谢占主导。 在低强度运动时，比如走路时，无氧代谢所占比例非常小，这时候我们可以称之为所谓的“纯有氧”运动。但在几乎所有的高强度运动时，有氧与无氧代谢并存，因此没有“纯无氧”。 另外，一项运动是有氧还是无氧还要根据个人的身体状况和训练水平来定。竞走奥运队员的快走，对很多初学者有可能会导致无氧代谢参与，引起肌肉酸痛；而初学者所谓的大重量举重，对于职业力量选手来说也许只是热身，相当于他们的有氧运动。 无氧运动也能燃烧脂肪以上提到有氧代谢可以以脂肪和糖分为燃料，而无氧代谢只能以糖分为燃料，是不是只有有氧运动才能消耗脂肪减肥呢? 不是。原因有 如上所说，没有“纯无氧”，高强度无氧运动时有氧代谢几乎已经达到极限。这一点，相信跑过四百米短跑的人都有体会 无氧代谢主要消耗糖原，糖原消耗的结果是加速有氧代谢动用脂肪供能，因此，无氧与有氧结合减脂效果更好 无氧运动不光在运动时消耗大量的能量，更欠下“氧债”，提高机体代谢，让身体静息时也消耗能量，而在静息时消耗的能量多数来自脂肪 关于有氧运动与无氧运动的区别就介绍到这里，原文来自 知乎，由于这篇回答太赞，内容详实且浅显易懂，所以这里就照搬了。]]></content>
      <categories>
        <category>大叔的目标是型男</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[离线下载让车速更快]]></title>
    <url>%2F2019%2F02%2F13%2F%E7%A6%BB%E7%BA%BF%E4%B8%8B%E8%BD%BD%E8%AE%A9%E8%BD%A6%E9%80%9F%E6%9B%B4%E5%BF%AB%2F</url>
    <content type="text"><![CDATA[迅雷说，离线下载是高级功能，不充钱别玩。百度网盘说，我这离线下载免费，但你下的是敏感资源，请回吧。我说，如果别人的不给你用，那你就自己搭一个。 简介什么是离线下载？比如有一部手机A，和一台服务器B，A把下载任务交给B，等B下载完成，A再找B取回。乍一看，还挺麻烦，A自己去下不就行了，干嘛费这些事？因为B的网速快，虽然要经历下载和取回两个步骤，但花的时间短。 举个例子，你要签收一件很重要的包裹，并且你住得很偏。如果你让对方寄到家里，你就得一直呆在家，盼着快递小哥快点到来，而快递小哥嫌你那太远，优先派送其他近的地方。如果换一种方式，你让对方寄到代收点，你就可以出去浪了，什么时候方便什么时候去取，而代收点在市中心，交通便利，属于优先派送范围。 可以看出，离线下载的优势有 下载速度快 不用为了下载而挂机，省电 用手机流量发下载任务，回家连WiFi再看，省流量 电影存贮在服务器，省空间 发送给朋友不用自己传输，直接给离线空间地址，易分享 搭建搭建非常简单，使用一键管理脚本 1234# 脚本地址$ wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/cloudt.sh &amp;&amp; chmod +x cloudt.sh &amp;&amp; bash cloudt.sh# 备用地址$ wget -N --no-check-certificate https://raw.githubusercontent.com/lenkipan/doubi/master/cloudt.sh &amp;&amp; chmod +x cloudt.sh &amp;&amp; bash cloudt.sh 执行后，输入对应的数字，进行安装、卸载、启动、停止。软件的名字是Cloud Torrent，特点有 不耗性能 只支持BT下载，可以本地上传种子文件，也可以使用磁力链接 支持视频在线播放 可设置账号和密码]]></content>
      <categories>
        <category>老司机驾校</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[不懂下载开不好车]]></title>
    <url>%2F2019%2F01%2F31%2F%E4%B8%8D%E6%87%82%E4%B8%8B%E8%BD%BD%E5%BC%80%E4%B8%8D%E5%A5%BD%E8%BD%A6%2F</url>
    <content type="text"><![CDATA[迅雷还是一个好同志的时候，我不关心下载是怎么一回事，现在好同志不再为人民服务，我打算干掉它再提拔一个上来。于是，我研究了一下下载的历史。 P2P以前，人们下载资源是靠服务器，比如 X是个电影网站 电脑A要下载，找X 电脑B要下载，找X … 这种方式存在几个问题 X太重要了，它一瘫痪，所有人都没电影看 X能力有限，大家都找它，它肯定忙不过来，所以人一多，下载速度就很慢 为了解决这些问题，出现了一个叫 P2P 的技术，它的特点是无中心服务器，也就是没有X，用户要下载，得靠自己。比如 电脑A要下载《猫和老鼠》，于是A在网络上问，谁有《猫和老鼠》 电脑B有《猫和老鼠》，于是B说，我有，到我这下吧 于是A找到B，开始下载 过了一会，电脑C也要下载《猫和老鼠》，它也在网络上问，谁有《猫和老鼠》 B回答，我有，到我这下吧 A回答，我也在下，还没下完，你可以找我下载，我下好的这一部分 于是C找到A下一部分，找到B下另一部分 因为C能同时到两个地方下载，所以C的下载速度比A还快 过了一会，电脑D也要下载《猫和老鼠》… 技术的灵感来源于现实生活，上面的流程用一句歌词就能概括，只要人人都献出一点爱，世界将变成美好的人间。每一个用户，下载资源的时候，既是索取者，同时也是提供者，它索取自己没有的，提供已经拥有的。这样就解决了原来的问题 没有X，或者说人人都是X，不存在谁挂掉了，大家都没得看 下载的人越多，速度越快 P2P技术发展到第三代，终于成熟起来，人们下载资源不再找网站，而是找种子。关于P2P的详细介绍，参考 p2p科普。 BTP2P之前存在一些问题 我怎么知道我要的资源谁有，一个一个问？就算问到了，可对方网速太慢，那我下到什么时候去 搭便车问题，我是有资源，但我凭什么给别人下载？他只会拖我的网速。我只想下载别人的，但别人不能下我的 对应的解决方法是 找一个中介，上传资源找它登记，下载资源找它查询，登记时还会记录上传速度 下载时，如果你的上传速度很慢，甚至不上传，中介就不告诉你速度最快的下载位置，这样你下载也会变慢 由此又引发了一个疑问，虽然中介没那么多事，只维护一个名单，不提供具体的上传和下载，但世界上那么多资源，它全都要记录，它扛得住么？一家中介当然扛不住，很多家一起呢？可是，这就绕回来了，原本我是不知道谁有我想要的资源，现在变成，我不知道有我资源的人，登记在哪个中介，有意思么？有意思，因为有个东西会告诉你应该找哪个中介，这个东西就是种子。还是举刚才的例子 电脑B要共享《猫和老鼠》，先联系中介Y做登记 登记后B生成一个种子，里面记录着《猫和老鼠》的名字、大小以及Y的地址 B把种子公布到网上 电脑A要下载《猫和老鼠》，它先下载种子 打开种子后，A找到了Y Y查到记录说，你去找B，B有资源 A连上B，一边下载一边上传 电脑C要下载《猫和老鼠》，它先下载种子 打开种子后，C找到了Y Y查到记录说，你去找A和B，它们有资源 C连上A和B，一边下载一边上传 这一下载方式就是 BT，它有两个要素 Tracker，也就是中介Y，掌握着网络中谁要这个资源以及谁有这个资源 种子，实际是.torrent后缀的文件，记录着Tracker在哪以及我要哪个资源 现在BT升级了，人们下载资源不再求种，而是找磁力链接。 MagnetBT做到了互联网人人平等，但版权商急眼了，要什么平等？你不买就别看。细细一想，这事不好追究责任，因为所有资源都是网友自发上传，没有谁从中组织，怎么办？既然我搞不了人，那我搞服务器，只要Tracker停了，种子也就失效了，你也就下不到了。后面的事情很简单，版权商胜利，种子没有了。 从这里看出，BT并没有完美地实现P2P的去中心化思想，虽然Tracker不提供具体的下载，但它也属于中心，只要中心瘫痪，其他人都没得玩。所以要想一个方法，既要保留Tracker的功能，又不能太依赖它。如果村长不行了，乡亲们怎么过日子？劳动人民的力量是无穷的，大家决定集体承担村长的责任，如果每家每户都出力，那么即使没有村长，村子也能运转下去。 除了Tracker容易让人抓住把柄，还有一个问题，种子不方便传播，万一以后有规定，为防止侵权，网站禁止分享.torrent文件，那我怎么下种子？你能禁止分享文件，你不能禁止分享字母和数字吧，我给种子套上一层马甲，把它变成一串字符，你还能禁止么？于是，磁力链接 诞生了，它升级了BT的两个要素 Tracker遭淘汰，原来的大名单被分成很多小名单，每一个BT用户存储一份 种子有马甲，只要一串字符，就能下到种子文件 外面的版权官司打得越来越激烈，但人们发现，想下载的一样能下载，好像没什么变化，非要说不同的话，就是磁力链接方便一点。但磁力链接到底是什么？不着急，慢慢讲，主要是三项技术。 DHTDistributed HashTable，分布式哈希表 DHT是一种分布式存储方法。DHT的作用是找到那些与本机正在下载（上传）相同文件的对端主机（Peer），当然，实现这一过程并不依赖Tracker服务器。在DHT网络中的每个客户端负责一个小范围的路由，并负责存储一小部分数据，从而实现整个DHT网络的寻址和存储。这种信息获取方式保证了整个网络没有单个的中心，即使一个节点下线，依然可以通过其他节点来获取文件，因此也就不需要Tracker服务器来告诉你，其他节点在什么地方。 简单理解，DHT将大名单分成小名单。 PEXPeer Exchange，节点信息交换 虽然DHT解决了去中心化的问题，但要在没有“中心协调员”（Tracker）的情况下实现高效寻址，就要借助PEX。PEX所提供的功能有点类似于以前的Tracker服务器，但工作方式却非常不同。 简单理解，PEX将小名单关联起来。 Magnet LinkMagnet Link，磁力链接 磁力链接最常见的用途是基于文件内容的散列函数值来链接到特定文件，生成一个唯一的文件识别符，类似于ISBN。不像常规的识别符，内容散列可以被任意一位持有此文件的人生成，所以并不需要一个中心机构，这使其在文件共享领域经常被用作搜索条件，因任何人都可以分发一个磁力链接来确保该链接指向的资源就是他想要的，而和得到该资源的方式无关。（虽然技术上讲，两个不同的文件可能具有相同的散列值，但实际上这是极不可能发生的） 磁力链接的格式和HTTP链接末尾的格式相同，协议名magnet接?，后面再接参数，每个参数用&amp;分隔，常见参数有 xt（eXact Topic），包含文件哈希值的统一资源名称，必填 dn（Display Name，显示名称），选填 只有xt是必填参数，换句话说，一串磁力链接，只要xt有值就能够下载，其余的可以不要。xt的值也有格式，比如xt=urn:btih:XXX，意思是 urn（Uniform Resource Name，统一资源名称），后接: btih（BitTorrent info hash，种子散列函数），后接: XXX，根据btih算出的种子文件的值，用我的话讲，就是种子的马甲 urn后面只能接btih么？不是，md5和ed2k都可以，参考维基百科 磁力链接。 磁力链接再往后，就是网盘时代了。个人不喜欢网盘，就不介绍了，但有篇文章写得不错，参考 为什么现在老司机发片都不用“磁力链”了？]]></content>
      <categories>
        <category>老司机驾校</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[有虚拟机随便玩]]></title>
    <url>%2F2019%2F01%2F28%2F%E6%9C%89%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%9A%8F%E4%BE%BF%E7%8E%A9%2F</url>
    <content type="text"><![CDATA[开学之前，得先买草稿本，玩Linux之前，得先装虚拟机。 VMware装虚拟机的软件是VMware。下载、安装、创建的过程很简单，唯一麻烦的是VMware的网络设置，参考 VMware WorkStation的三种网络连接方式。这里使用NAT模式 主界面中选择编辑，找到虚拟网络编辑器 选中VMnet8，将最下方的子网IP改成192.168.80.0 选择NAT设置，将网关IP改成192.168.80.254 主界面中右键自己的虚拟机，选择设置 选中网络适配器，将右边的网络连接改为NAT模式 设置完成，但有个疑问，这个随便填的网段为什么会有效？因为VMware添加网络时，会在自己的电脑（宿主机）创建一个虚拟网卡，IP地址是192.168.*.1，默认网关是空。所以虚拟机要连接宿主机，也得通过这个IP。 CentOS操作系统使用CentOS，进入系统后修改网卡，把IP固定 1234# CentOS 6.9$ vim /etc/sysconfig/network-scripts/ifcfg-eth0# CentOS 7.4$ vim /etc/sysconfig/network-scripts/ifcfg-ens33 修改两个地方 1234# ONBOOT 系统启动时是否激活网卡ONBOOT=yes# BOOTPROTO 启动时指定协议BOOTPROTO=static 添加静态IP 12345IPADDR=192.168.80.100NETMASK=255.255.255.0GATEWAY=192.168.80.254DNS1=8.8.8.8DNS2=114.114.114.114 保存后重启网络，测试是否有外网 12$ service network restart$ ping baidu.com 如果重启后没有ping通，就再重启一次。]]></content>
      <categories>
        <category>Linux命令手册</category>
      </categories>
      <tags>
        <tag>CentOS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[跨过山和大海]]></title>
    <url>%2F2019%2F01%2F26%2F%E8%B7%A8%E8%BF%87%E5%B1%B1%E5%92%8C%E5%A4%A7%E6%B5%B7%2F</url>
    <content type="text"><![CDATA[朋友，这篇文章要密码。 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>软件大师</category>
      </categories>
      <tags>
        <tag>CentOS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[给网址加一把小锁]]></title>
    <url>%2F2019%2F01%2F23%2F%E7%BB%99%E7%BD%91%E5%9D%80%E5%8A%A0%E4%B8%80%E6%8A%8A%E5%B0%8F%E9%94%81%2F</url>
    <content type="text"><![CDATA[在浏览一些网站时，网址左边会有“不安全”三个字，这时会不会担心这网站有病毒？其实没有那么恐怖，它的意思是，不要在这个网站输入敏感信息，因为数据传输过程不安全。 发现问题虽然只是一个博客，但也得讲究一点用户体验。也许就因为这短短的三个字，网站就吓跑了不少人。更重要的是，网站档次下去了，本来辛辛苦苦做的博客，页面精美，内容丰富，结果看起来像山寨货。 相反，如果打开博客时，网址左边不是“不安全”，而是一把小锁，有没有安心很多？ 找到原因“不安全”指的是HTTP，小锁指的是HTTPS。 HTTP与HTTPS你一定见过这两个词，每个打开的网址，前面都会自动加上http://，或者是https://，例如www.baidu.com打开后就变成了https://www.baidu.com。 为什么会自动加上它们？因为它们是协议，专门为浏览网站而设计出的协议，没有它，网站打不开。 那它们有什么区别？HTTPS有加密，HTTP没有。举个例子，浏览网站相当于两个人在房间里聊天，两人都讲普通话，如果有人在外面贴着门偷听，那就一听一个准，所以别以为对方是熟人，就说出银行卡和密码。可是，如果聊天时不讲普通话，讲自创的语言，别人就算听到了，也听不懂。“F42JR9（有内鬼，终止交易）”，“D09VC9（傻强，把货扔海里）”。 HTTPS比HTTP多出来的S，是指SSL（Secure Socket Layer，安全套接字层），或者TLS（Transport Layer Security，传输层安全），TLS是升级版的SSL。 HTTPS加密原理先简单了解一下两种加密方式 非对称加密，公钥加密，私钥解密，更安全 对称加密，加密解密使用同一个密钥，更快速 好多名词，好枯燥，还是按照我的方式讲解。假设 A找B充会员 B有一个箱子，类似意见箱，东西可以往里放，但不能往外取，箱子的钥匙只有B一个人有 B收到A充会员的消息后，把空箱子寄给了A A有一个盒子，盒子配有两把钥匙，盒子和箱子不同，它是全密封的 A把这个盒子和其中一把钥匙，投进B的空箱子里，寄回给B B用自己的钥匙打开箱子，拿到了A的盒子和钥匙 B用A的钥匙打开A的盒子，放进去一张纸条，“知道了这是付款二维码”，然后将钥匙留下，把盒子寄出去 A收到盒子，自己也有一把钥匙，打开后看到了纸条，扫码付款 之后，A和B就一直用这个盒子交流 在这个过程中，所有消息都是放在盒子或箱子中进行传输的，非常安全，但细细一想，仍然有漏洞。假设 快递公司有个内鬼C，在中途劫取到盒子，想把付款二维码换成自己的 他发现自己做不到，因为他打不开盒子，他没有A和B手中的那两把钥匙 C不气馁，他在A第二次充会员时，劫取到了A寄回给B的箱子 他想把箱子打开，把A的盒子和钥匙取出来，这样就有了钥匙，能打开盒子，往里面放自己的二维码 他发现自己做不到，因为他打不开箱子，他没有B手中那唯一的一把钥匙 C不气馁，他在A第三次充会员时，劫取到了B寄给A的空箱子 他把B的空箱子换成另一个自己有钥匙的空箱子，再寄给A A把自己的盒子和钥匙投进空箱子，寄出 C再劫取到箱子，拿自己的钥匙打开箱子，再拿里面的钥匙打开盒子，在盒子里放自己的二维码，寄回给A A扫码付款，钱到了C手上 从上面可以看出，唯一能出问题的点是，A不认识B的箱子，只要C伪造一个来欺骗A，A和B后面的对话就全被破解了。那怎样才能让A认识B的箱子？假设 警察局老大D，规定所有的箱子都必须办箱子证，办完后还要把证刻在箱子外面 箱子证上能看出，这个箱子是谁的，啥时候办的证，有效期是多久，以及D的亲笔签名 这样，所有人在收到箱子时，都能看出箱子是不是真的 箱子、盒子、箱子证，三样东西搭配起来，C就被饿死了。现在故事讲完了，回到正题HTTPS，没有人能保证信息在传输过程中不被监听，能保证的是，就算被监听，别人也无法破解，如果信息被篡改，我们一眼也能发现。箱子代表非对称加密的公钥，箱子钥匙代表非对称加密的私钥，盒子和盒子钥匙代表对称加密的密钥，箱子证代表CA（Certificate Authority，证书颁发机构）颁发的数字证书。附上一篇专业文章，深入揭秘HTTPS安全问题&amp;连接建立全过程。 写到这里，有一点感慨，一个人要证明自己就是自己，得靠其他人或其他机构，所以人们都在办证。物品或许可以被定义，但是人不行，人的潜力无限 You’re not your job.You’re not how much money you have in the bank.You’re not the car you drive.You’re not the contents of your wallet.You’re not your fucking khakis.You’re the all-singing, all-dancing crap of the world. 解决问题办证要花钱，但CA不止一家，有一些能用到免费的，申请过程参考 Hexo博客之添加https。如果是用GitHub作空间，就不需要申请，因为GitHub已经买过了，HTTP和HTTPS都能访问。如果是用自己的服务器，申请之后还要修改Nginx的配置。配置的目的有两个 同时支持HTTP和HTTPS 访问HTTP时，自动跳转到HTTPS 直接上配置文件nginx.conf 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192# For more information on configuration, see:# * Official English Documentation: http://nginx.org/en/docs/# * Official Russian Documentation: http://nginx.org/ru/docs/user nginx;worker_processes auto;error_log /var/log/nginx/error.log;pid /run/nginx.pid;# Load dynamic modules. See /usr/share/nginx/README.dynamic.include /usr/share/nginx/modules/*.conf;events &#123; worker_connections 1024;&#125;http &#123; log_format main '$remote_addr - $remote_user [$time_local] "$request" ' '$status $body_bytes_sent "$http_referer" ' '"$http_user_agent" "$http_x_forwarded_for"'; access_log /var/log/nginx/access.log main; sendfile on; tcp_nopush on; tcp_nodelay on; keepalive_timeout 65; types_hash_max_size 2048; include /etc/nginx/mime.types; default_type application/octet-stream; # Load modular configuration files from the /etc/nginx/conf.d directory. # See http://nginx.org/en/docs/ngx_core_module.html#include # for more information. include /etc/nginx/conf.d/*.conf; server &#123; listen 80; # HTTP默认端口80 listen [::]:80 default_server; server_name xxxxx.com; # 绑定的域名 root /usr/local/blog; # 网站根目录 return 301 https://$server_name$request_uri; # 重定向到HTTPS # Load configuration files for the default server block. include /etc/nginx/default.d/*.conf; location / &#123; index index.html; # 默认首页 &#125; error_page 404 /404.html; location = /40x.html &#123; &#125; error_page 500 502 503 504 /50x.html; location = /50x.html &#123; &#125; &#125;# Settings for a TLS enabled server. server &#123; listen 443 ssl http2 default_server; # HTTPS默认端口433 listen [::]:443 ssl http2 default_server; server_name xxxxx.com; # 绑定的域名 root /usr/local/blog; # 网站根目录 ssl_certificate "cert/xxxxx.com.pem"; # 数字证书 ssl_certificate_key "cert/xxxxx.com.key"; # 私钥 ssl_session_cache shared:SSL:1m; ssl_session_timeout 10m; ssl_ciphers HIGH:!aNULL:!MD5; ssl_prefer_server_ciphers on; # Load configuration files for the default server block. include /etc/nginx/default.d/*.conf; location / &#123; index index.html; # 默认首页 &#125; error_page 404 /404.html; location = /40x.html &#123; &#125; error_page 500 502 503 504 /50x.html; location = /50x.html &#123; &#125; &#125;&#125; 修改后重启Nginx 1$ service nginx restart 这时如果在服务器直接用curl localhost测试，会发现返回301，不要紧，用浏览器打开是能跳转的。另外，如果空间没备案，后期HTTP请求会被主机提供商拦截，但是HTTPS仍然能访问。]]></content>
      <categories>
        <category>玩玩博客</category>
      </categories>
      <tags>
        <tag>Nginx</tag>
        <tag>HTTP</tag>
        <tag>HTTPS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[你不知道的神奇网站]]></title>
    <url>%2F2019%2F01%2F19%2F%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E7%A5%9E%E5%A5%87%E7%BD%91%E7%AB%99%2F</url>
    <content type="text"><![CDATA[持续更新。 搜索 MEZW，搜索引擎 爱搜资源，网盘搜索 探索云盘，需要登录 虫部落，一站式搜索 磁力 Torrent Kitty，老站 BT Kitty，老站 Sukebei，动漫 资源 Bh-Vip，安卓软件更新合集 不死鸟，分享为王 影视 Neets，私人追剧 电影蜜蜂，决战秋名山 茶杯狐，影视资源聚合搜索引擎 音乐 音乐随身听，网页播放器，可搜索可下载 墨灵音乐，在线听歌，还有MV和电台 图片 SM.MS，图床 书籍 鸠摩搜书，搜索结果有格式分类 文件 奶牛快传，传输临时文件]]></content>
      <categories>
        <category>软件大师</category>
      </categories>
      <tags>
        <tag>网站</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows软件库]]></title>
    <url>%2F2019%2F01%2F18%2FWindows%E8%BD%AF%E4%BB%B6%E5%BA%93%2F</url>
    <content type="text"><![CDATA[朋友，这篇文章要密码。 Incorrect Password! No content to display! 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]]></content>
      <categories>
        <category>软件大师</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一个重大的决定]]></title>
    <url>%2F2019%2F01%2F17%2F%E4%B8%80%E4%B8%AA%E9%87%8D%E5%A4%A7%E7%9A%84%E5%86%B3%E5%AE%9A%2F</url>
    <content type="text"><![CDATA[男人，可以没钱，但一定要帅。 不能妥协的追求每天学得一头油，跑两下就气喘，走路背也挺不直，那还学个鬼，一点男人样都没有。 男人应该什么样？《皇家赌场》里的 Daniel Craig，《搏击俱乐部》里的 Brad Pitt，《实习生》里的 Robert De Niro。三个角色，诠释了男人的三种特质，利落、狂野和讲究。 分析得头头是道，但现实情况是，一个胖大叔挺着个肚子在瞎吹。我不想吹牛，我下定决心，开始健身。 为什么健身 身材不是你健身的目的，快乐也不是健身的目的，甚至健身都不是你的目的。你的目的，是发现你自己，困缚于日常生活中的自己。 我曾经也是单纯为了健身而训练。初始，我跟我的身体对抗，我跟所有人一样，想要更瘦、身材更好。我咬着牙，强迫自己多举起一斤；我攥紧拳头，为了能多跑一千米。不必说，这种目的性很强的健身效果很差，不仅身材没有变好，运动对我来说，都变成了一种压力。 但在后来了解健身、继续训练的过程中，我和身体和解了。其实健身就像一个越狱的过程。我在训练中，渐渐发现了曾经忽视的身体。我开始发现自己身体每一个部位存在的意义，我可以渐渐地了解它们、熟悉它们。我开始明白，健身是自己和自己的身体一起，为了更好的生活去努力。 来自《硬派健身》。 怎么做以前健身这个词给我的感觉是，去运动就好了。现在我打算，扎扎实实从理论学起，然后不断尝试和改进。再借鉴这本书里的一句话 不需要别人再告诉你什么是对的、什么是错的。你可以尊重自己的身体，尊重科学，自己去寻找和发现健身中的各种知识和宝藏。]]></content>
      <categories>
        <category>大叔的目标是型男</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[聊一聊远程控制]]></title>
    <url>%2F2019%2F01%2F09%2F%E8%81%8A%E4%B8%80%E8%81%8A%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6%2F</url>
    <content type="text"><![CDATA[服务器长什么样？就是放在机柜里一层一层的像VCD还不给人碰的玩意，它没接显示器，还被锁起来，那怎么玩它？你一定会说，远程啊。完全正确，但是，该怎么远程？ 有哪些远程方式按照来源不同，大致分为第三方软件远程，和系统自带软件远程。 QQ可能它是很多人唯一知道的远程软件，聊天窗点个按钮就能控制对方电脑，很方便。但大兄弟，能不用就不用吧，别问为什么。 TeamViewer这是一个专业的远程软件，使用简单，缺点是收费，而且被控制的电脑的屏幕会“直播”，你晚上在公司加班，突然发现隔壁的电脑自己在动，位子上却没有人，见鬼了。 MSTSC上面两个都是第三方软件，都免不了下载安装，服务器都讲究性能，额外的安装也意味着额外的性能消耗，所以还是系统自带的比较好。 在Win + r中输入mstsc打开远程桌面连接，输入主机、用户名、密码。一旦连接上，被控制的电脑会锁屏，不存在“直播”，能够防止信息泄露。 Windows系统建议用此方式远程。 SSH连一下个人电脑，或者Windows服务器可以用MSTSC，但是绝大部分服务器都是Linux系统，MSTSC就不好使了，那什么好使？SSH。 我们搭建的博客，无论是使用自己的Linux服务器，还是使用GitHub平台，都会用到SSH。不着急，我们慢慢讲，一个一个来。 Windows连接大法MSTSC基于RDP协议，默认端口3389。 什么是端口你在电脑上一边浏览网页，一边用微信聊天，网络把数据传过来，电脑是怎么知道哪些数据是给哪个程序的？网页就一定是浏览器的？聊天消息就一定是微信的？那你再开个QQ呢？ 电脑就像一栋房子的管理员，每一个要通信的程序都有一间房，管理员不在乎里面住的是谁，它只在乎这间房的房号是多少。每时每刻都有房客写信出去，管理员会帮它填上寄信人“xx号房客”，等收到回信时，管理员就知道该交给谁了。这种管理方式有很多好处 效率提高了。寄信时不登记房客信息，收到回信时就不用核实房客身份，“你是叫微信么，没冒充吧？” 资源节省了。每一个房客只在要寄信时才住到房子里（程序开启时），它交流完就回地下室睡觉去，房间也就空出来了 一共有65536个房间，房号从0到65535，这个房号就是端口，房间里有人就叫占用。每个房客，为了保证自己的房间不被抢，都会指定一个固定的房号，这就是默认端口，当然管理员也可以让它搬到别的房间去，但总归嫌麻烦。有些房号，因为指定住它里面的房客太有名气，所以一说起号码，大家都知道里面是谁。 什么是协议协议只是一种正式的说法，通俗一点就是约定。就像抗战时期的暗号，两个人见面前约定好，见面之后先说什么后说什么，我说什么可以表示我的身份，为了防止别人偷听，我说大的意思是小，我说强的意思是弱，那你如果不知道这个约定，你就不知道我在讲什么。所以，协议并不是要多厉害才能玩，协议内容随便定义，我喊上课你喊起立，这也是一种协议，学校定义出来的老师和学生之间的协议。如果你在不知道协议内容的情况下，听懂了对方话的意思，就叫做破解了协议，黑客干的就是这些事。 什么是RDPRDP，Remote Desktop Protocol，远程桌面协议，专门用于Windows系统的远程连接。如果两台电脑都有遵循此协议的软件，它们就可以用这个软件互相远程连接，MSTSC就是微软官方提供的这种软件。 MSTSC，Microsoft Terminal Services Client，微软终端服务客户端，是遵循RDP协议的连接工具。现在看“MSTSC基于RDP协议，默认端口3389”这句话，有没有舒服了一点。 权限设置连接之前，需要允许自己的电脑被远程控制，操作步骤参考 Win7系统怎么开启远程桌面？Win7远程桌面怎么用。远程协助和远程桌面是不同的功能，参考 Windows的远程协助和远程桌面的区别，我们只用配置远程桌面。 在远程设置-选择用户-添加的时候，发现自己的用户搜索不到，解决办法是 右键计算机，选择管理 选择系统工具-本地用户和组-用户 出现一个列表，表头是名称和全名 发现自己的用户名是全名，而选择用户那里取的是名称 将名称改成和全名一致 注销或重启 Linux连接大法本章重难点。 什么是SSHSSH，Secure Shell，安全外壳协议，是一种加密的网络传输协议，任何网络服务都可以通过SSH实现安全传输，但最常见的用途是远程登录系统，默认端口22。参考维基百科 Secure Shell。 注意名字，它不像RDP叫远程桌面，它叫安全外壳，也就是说它强调的是安全，正因为这个特点，它有更广泛的应用，而不仅仅当作远程登录。例如，我们部署博客到GitHub，在配置文件_config.yml中填写 12345deploy: type: git # 按SSH协议的格式，写出的地址，表示使用SSH协议，把我们生成的博客页面，传输过去 repo: git@github.com:xiaomin/xiaomin.github.io.git branch: master 也可以改成 12345deploy: type: git # 按HTTPS协议的格式，写出的地址，表示使用HTTPS协议，把我们生成的博客页面，传输过去 repo: https://github.com/xiaomin/xiaomin.github.io.git branch: master 这两个地址指向的是同一个地方，只不过使用的传输协议不同，但最终都能达到部署的目的。如果听起来有点绕，可以这么理解，你想让助理帮你寄一个包裹，于是你填了一个单，用前一种写法，表示你想让助理寄顺丰，用第二种写法，表示你想让助理寄平邮。包裹总能寄到，但寄顺丰更方便。 HTTPS也是一种加密的网络传输协议，我们下次再讲。部署博客，SSH比HTTPS好用，因为不用输入用户和密码，那SSH是如何做到这一点的？ SSH验证方式SSH有两种验证方式 用户和密码，登录时所有信息会被加密，但可能会有别的服务器在冒充真正的服务器，无法避免被“中间人”攻击 公钥和私钥，用户为自己创建一对密钥，然后将公钥放在服务器，私钥保存在自己的电脑，连接时无需用户和密码，而且可以避免被“中间人”攻击，因为冒充的服务器没有自己保存的私钥 这种公钥和私钥的加密方式，叫做非对称加密。 非对称加密非对称加密，也称为公开密钥加密，是密码学的一种算法，它需要两个密钥，一个是公开密钥，另一个是私有密钥；一个用作加密，另一个则用作解密。使用其中一个密钥把明文加密后所得的密文，只能用相对应的另一个密钥才能解密得到原本的明文，甚至连最初用来加密的密钥也不能用作解密。由于加密和解密需要两个不同的密钥，故被称为非对称加密。不同于加密和解密都使用同一个密钥的对称加密，虽然两个密钥在数学上相关，但如果知道了其中一个，并不能凭此计算出另外一个。因此其中一个可以公开，称为公钥，任意向外发布；不公开的密钥为私钥，必须由用户自行严格秘密保管，绝不透过任何途径向任何人提供，也不会透露给被信任的要通信的另一方。 这段话取自维基百科 公开密钥加密，解释得很清楚，就是有点长，稍微概括一下 公钥用来加密，私钥用来解密 公钥和私钥是一对，用公钥加密的信息，它自己都无法解密，只有与它对应的私钥才能解密 公钥可以随便给其他人，不怕泄露，私钥只能自己保管 信息传输过程中，只有公钥会经过网络，私钥始终在自己电脑，这样传输过程中私钥不会被窃取 生成SSH密钥对打开命令行 123# -t 密钥类型# -C 备注$ ssh-keygen -t rsa -C "xiaomin@qq.com" 确认之后系统会提示输入存储位置，和passphrase（口令），直接回车无需理会，参考 ssh-keygen基本用法。生成之后，打开个人文件夹，也就是在开始菜单中点击自己的用户名，或者打开C:\Users\xiaomin，然后找到.ssh并进入，可以看到三个文件 id_rsa，私钥 id_rsa.pub，公钥 known_hosts，已知主机，所有使用SSH连接过的主机的信息 用记事本打开id_rsa.pub，复制里面所有内容，谁给你粘贴，你就能控制谁。 粘贴到GitHub直接在网页上操作，非常简单，参考 git详细教程–光速学会安装、提交托管与sshkey创建，写得很详细，而且有截图，往后翻翻。 测试是否配置成功 12# 注意，这个不是自己的邮箱，不用改$ ssh git@github.com 能看到自己GitHub的用户名，表示成功。 粘贴到服务器123456# 进入Home$ cd ~# 新建.ssh目录$ mkdir .ssh$ cd .ssh$ vim authorized_keys authorized_keys就是用来记录公钥的文件，每一行代表一个公钥，所以如果~/.ssh/authorized_keys已存在就无需创建，直接空一行，粘贴自己的就行。测试是否配置成功 12# 注意，这个不是自己的邮箱，是用户@服务器地址，需要改$ ssh git@xiaomin.com 登录成功，并且无需密码，表示成功。]]></content>
      <categories>
        <category>玩玩博客</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>GitHub</tag>
        <tag>SSH</tag>
        <tag>HTTPS</tag>
        <tag>Linux</tag>
        <tag>MSTSC</tag>
        <tag>RDP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[博客的人民币玩法]]></title>
    <url>%2F2019%2F01%2F05%2F%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%BA%BA%E6%B0%91%E5%B8%81%E7%8E%A9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[个人博客就想游戏里的装备，要想更厉害一点，总归要花钱的，不过这个钱花得很实在。 绑定个人域名域名被发明出来原本只是方便人们记忆，给IP起个名字，但现在有了品牌的意义。说高级一点，这也是一笔无形资产。 买买买域名很便宜，建议在 阿里云 上购买。个人观点，域名除了要有意义以外，最重要一点是，短。很多人拿自己名字的全拼去申请域名，比如zhangsanfeng.com，字母太多敲得累，如果换成拼音的首字母zsf.com，是不是一下子就显得高大上了？但这域名肯定天价，com、cn、net都比较贵，那就换别的后缀，vip、xyz、top也很好。 申请流程比较繁琐，填资料交钱备案，中间有不明白的可自行百度，等域名拿到手的那一刻，一切等待都是值得的。 绑定打开阿里云的控制台，找到域名绑定，如果你有自己的服务器，就填写一个A记录，表示将域名指向一个IP，然后在记录值里写上IP。 如果你是用GitHub作博客，就填写一个CNAME记录，表示将域名指向另一个域名，然后在记录值里写上自己GitHub的博客地址，例如zhangsanfeng.github.io。还没完，现在绑定并没有生效，需要在博客里改点东西 本地打开博客项目 找到source文件夹，点进去 新建文本文档CNAME.txt 输入自己的域名，例如zhangsanfeng.com，保存 将CNAME.txt重命名为CNAME 部署到GitHub 大功告成，浏览器访问zhangsanfeng.com。 使用自己的服务器如果你不喜欢用GitHub作博客，想使用自己的服务器，那你肯定是个搞IT的，因为没有普通用户会为了一个博客而去自己搭服务，门槛比较高，也太折腾。但文章写到这，就把它一并讲了，接下来的内容各位选择性略过。 项目结构Hexo项目中，有这些文件和文件夹 node_modules，hexo依赖包 public，hexo生成的页面，部署的就是里面所有的静态资源 scaffolds，命令生成文章等的模板 source，自己实际写的文章 themes，主题 _config.yml，整个博客的配置 db.json，source解析后得到的 package.json，项目所需模块的配置信息 Hexo部署的原理就是，把public里的所有内容同步到服务器的HTTP服务中。 部署思路Hexo的页面全部是静态的，因此使用Nginx做HTTP服务，性能好配置也简单。剩下的问题是如何同步，还是用Git，我们在服务器创建一个Git仓库，这样做的目的有两个 结合hexo-deployer-git插件，实现一键部署，解决文件从本地到服务端的问题 配置Git钩子，在每次Git接收到更新时，触发钩子，将仓库中文件同步到Nginx的网站根目录 参考 阿里云VPS搭建自己的的Hexo博客。至于钩子是什么，引用 官方文档 一句话 Git 能在特定的重要动作发生时触发自定义脚本。 创建Git仓库我用的是CentOS系统，因此用yum安装Git 1$ yum install -y git 指定裸仓目录 12$ cd /home/git$ git init --bare blog.git 在Hexo的配置里，使用非root用户连接服务器更安全。增加只操作Git的用户git，并改变仓库目录的所属，否则git用户无权访问 12$ adduser git$ chown -R git:git blog.git 配置Nginx先安装 1$ yum install -y nginx 查看Nginx配置文件路径，然后修改 12$ nginx -t$ vim /etc/nginx/nginx.conf 找到下面这一段 123456789101112131415161718192021server &#123; listen 80 default_server; listen [::]:80 default_server; server_name zhangsanfeng.com; # 绑定的域名 root /usr/local/blog; # 网站根目录 # Load configuration files for the default server block. include /etc/nginx/default.d/*.conf; location / &#123; index index.html; # 默认首页 &#125; error_page 404 /404.html; location = /40x.html &#123; &#125; error_page 500 502 503 504 /50x.html; location = /50x.html &#123; &#125;&#125; 修改上面三个地方。接下来创建网站根目录并修改所属，启动Nginx 123$ mkdir /usr/local/blog$ chown -R git:git /usr/local/blog$ service nginx start 注意，一定要修改网站根目录的所属，否则下面配置的Git钩子会因为无权访问而不生效。 配置hooks仓库中的hooks目录，就是存放钩子的地方，重命名post-update.sample为post-update 123$ cd /home/git/blog.git/hooks$ mv post-update.sample post-update$ vim post-update 将post-update修改为 12#!/bin/shgit --work-tree=/usr/local/blog --git-dir=/home/git/blog.git checkout -f 最后，确保post-update拥有执行权限。 修改博客配置和部署到GitHub的过程是一样的，只不过要修改部署地址，打开全局配置文件_config.yml，找到deploy节点 1234deploy: type: git repo: git@zhangsanfeng.com:/home/git/blog.git branch: master 同样需要部署插件hexo-deployer-git，没安装的话，在博客项目中打开命令行 1$ npm install hexo-deployer-git --save 去吧皮卡丘部署命令和之前一样，毕竟整个过程只是服务端变了，客户端除了一个地址，其余都不用动 1$ hexo g -d 参考 基于Hexo、git、nginx静态博客实现自动部署功能。使用自己的服务器作博客，就完成了，但还有几点不完美的地方，其中一个是没有配置SSH，但这个篇幅较大，所以下次再讲。]]></content>
      <categories>
        <category>玩玩博客</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>hooks</tag>
        <tag>GitHub</tag>
        <tag>Hexo</tag>
        <tag>Nginx</tag>
        <tag>HTTP</tag>
        <tag>CentOS</tag>
        <tag>SSH</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自己动手搭建博客]]></title>
    <url>%2F2019%2F01%2F04%2F%E8%87%AA%E5%B7%B1%E5%8A%A8%E6%89%8B%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[搭博客不难，小白也能做，但这里的小白也不是说一点门槛都没有，毕竟涉及到命令，而命令又都是英文。不用担心，即使你不懂代码不懂英文也没关系，我也不懂，但只要照着做就能搭好，所以我说的门槛是指，耐心。 下几个软件工欲善其事必先利其器，先介绍几个软件，和我们使用它的目的。但是介绍之前，可以先看看 博客效果，随便挑，有喜欢的主题就记下名字。 GitHubGitHub是用来存放博客的空间，以后我们的博客页面就放在这里，别人通过它来看我们的博客。 它不是个软件，而是个网站，不用下载只需注册。打开 官网，是的你没有看错，这个网站全部是英文，但不影响使用。注册教程参考 GitHub的注册与使用 的第一部分。 有了账号之后，新建仓库。GitHub是一个功能强大的社区，不仅博客，什么玩意都能往上面放，只不过博客有点特殊，要使用它的博客功能，就必须在新建仓库时取特定的名字，格式是xxx.github.io，比如你的账号是xiaomin，那仓库名字就写xiaomin.github.io，这个仓库名字同时也是你的博客网址，以后别人想看你的博客，打开浏览器，输入 xiaomin.github.io 就可以了。 GitGit不就是GitHub的前三个字母么？没错，但它们不一样，而且它们是配套使用的。GitHub用来存放，Git用来管理。 举个例子，你在自己电脑上写了篇文章，然后想把它放到博客上去，你会怎么做？打开GitHub登录账号再点击上传么？朋友，不是这么玩的，一整套博客不是只有文章就够了，还需要各种功能，这些功能是靠其他的文件实现的，那所有文件我们都一个一个手动上传么，当然不可能。引申一下，这里的上传，或者说复制，专业术语就是部署。所以不用觉得搞电脑很难，只不过是一些名词听不懂而已，理解后才发现它也就那样。每个行业都是如此，都有专业术语，用来过滤外行人。 我们用Git的其中一个原因就是它的部署功能，写完博客，一行命令就把所有文件复制过去了。Git是一个软件，到 官网 下载，也是全英文，下载后安装，一直点下一步就行，不会的话参考 Windows下Git的下载与安装。 Node.js这玩意是一个运行环境，不用太较真，只用知道要安装它就够了，打开 官网，有两个绿色的按钮，LTS（长期支持版）和Current（当前最新版），下载LTS版，安装时一直下一步。 检查是否安装成功 Win + r快捷键调出运行 输入cmd点确定 在黑窗口中输入node -v 回车之后出现v10.15.0，表示安装成功 这里v后面的数字不一定是10.15.0，它是安装的版本，只要node -v命令有效就可以了，具体版本是多少不重要。 Hexo这才是搭建博客的主角，我们在自己电脑上写完文章，使用Hexo将文章制作成精美的页面，再使用Git将页面部署到GitHub。Hexo不能单独安装和运行，它需要Node.js环境，所以在安装Hexo之前，确保Node.js已经安装成功。 有兴趣的话可以看看Hexo的 官网，找不到下载的地方对不对，都说过它不能单独安装和运行，它的安装方式比较特别 桌面上点击右键，选择Git Bash Here（使用上面的cmd也可以） 在黑窗口输入npm install hexo-cli -g（这里的安装命令npm就是由Node.js提供） 回车之后开始下载和安装 检查是否安装成功，输入hexo -v 回车之后出现一系列版本号，安装成功 工欲善其事必先利其器，至此，器已经有了，但器还不利，接下来对器作一些配置，让器利起来。 敲几行命令命令，或者说指令，就是我们在黑窗口敲的那些英文。而黑窗口，叫做命令行，专门用来执行命令。用命令行操作电脑，更加方便，复制粘贴回车一气呵成，想点错都点不了。 新建博客项目 新建一个空文件夹，比如取名blog 进入blog文件夹，右键，选择Git Bash Here 执行命令hexo init 等待，blog文件夹里会生成许多文件 现在，我们有了最原始的博客项目blog，以后更换主题就在这里面做，文章也在这里面写。 看看原版效果 切换到刚才的命令行（如果关闭了，就进入blog文件夹，右键，选择Git Bash Here） 执行命令hexo server（也可以简写为hexo s） 等待，命令行出现INFO Hexo is running at http://localhost:4000 . Press Ctrl+C to stop. 打开浏览器，输入 localhost:4000 这个hexo s，也是以后修改主题或写完文章，在部署之前，在自己的电脑预览一下效果的命令。如果想停止预览，就切换到刚才的命令行，按Ctrl + C。 配置一键部署要实现一键部署，需要先告诉Hexo部署到哪去，这个地址在哪找呢？打开GitHub并登陆，再点击自己的项目xiaomin.github.io，右侧有一个绿色的按钮Clone or download，点开后出现一个地址https://github.com/xiaomin/xiaomin.github.io.git，把它复制下来。找不到这个地址可参考 此文章。 接下来，我们要把地址粘贴到博客项目里。在blog文件夹，有一个非常重要的配置文件_config.yml，用记事本打开它，找到最后的deploy，然后将它修改成 1234deploy: type: git repo: https://github.com/xiaomin/xiaomin.github.io.git branch: master 中间的repo改成刚才复制的地址。除此以外，Hexo需要一个工具才能将它和Git联系起来 切换到命令行 执行命令npm install hexo-deployer-git --save 安装完成 剩下最后一步，Git在使用前，要添加一个用户名和一个邮箱，打开命令行执行 12$ git config --global user.name xxx$ git config --global user.email xxx@xxx.com 假如你的用户名是xiaomin，邮箱是123456@qq.com，那么就写 12$ git config --global user.name xiaomin$ git config --global user.email 123456@qq.com 注意，这里的$符号不要复制到命令行里去了，它是一个提示符，而不是命令本身，它表示“请输入命令”。细心的话你会发现，在敲每个命令前，都有这么一个符号。 去吧皮卡丘之前讲过，这个博客项目的原理是，我们在自己电脑上写完文章，使用Hexo将文章制作成精美的页面，再使用Git将页面部署到GitHub。现在我们制作页面，还是切换到命令行 1$ hexo generate 后面那个单词有点长，可以简写成hexo g。执行命令后会生成很多文件，然后我们部署过去 1$ hexo deploy 这个命令也有点长，可以简写成hexo d。执行命令后会提示输入用户名和密码，把之前注册的GitHub账号和密码输入进去。大功告成，打开浏览器，输入 xiaomin.github.io。 最后说两句要打造一个优秀的博客，需要打磨的地方有很多，但都不难，网上大把的教程。这篇文章只是最基础的入门，博客从无到有，但从有到精就看个人发挥了。 更换主题原版的博客已经搭建成功，是不是很丑？还记得本文开头的地方，看到的 博客效果 么？把喜欢的主题的名字复制下来，到GitHub上搜索，就能找到源代码，下载下来扔到博客项目里，再应用一下新主题，博客就变身了。这里有一份参考 如何更换hexo博客主题。 编写文章以后文章写在哪里呢？博客文件夹下的source/_posts，不明白可以到 官网 上看视频。写完之后按照前面的方法部署，再用浏览器去看。每次部署要敲两行命令，可以精简到一行 1$ hexo g -d 部署前建议先执行 1$ hexo clean 它的作用是删除之前制作的页面，这样可以避免一些莫名其妙的错误。]]></content>
      <categories>
        <category>玩玩博客</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>GitHub</tag>
        <tag>Hexo</tag>
        <tag>Node.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我开博客了]]></title>
    <url>%2F2018%2F12%2F31%2F%E6%88%91%E5%BC%80%E5%8D%9A%E5%AE%A2%E4%BA%86%2F</url>
    <content type="text"><![CDATA[一直以来，我都很低调。从非主流时期的QQ空间，再到现在的朋友圈，我都没有发过动态。这么说来，我应该是一个过于传统的人。 为什么开始玩博客既然开始玩了，就说说玩的理由。 做笔记是刚需信息爆炸的时代，不多学点东西，真只能搬砖了。而从小被教育，好记性不如烂笔头。知识写在笔记里，比用脑袋记，更保险。 费曼学习法如果仅仅把知识记下来，那并不代表弄懂了，更不代表学会了。有个叫费曼的人，他既是诺贝尔奖获得者，同时也是一名教师，有过一句名言 I couldn’t reduce it to the freshman level. That means we really don’t understand it.要是不能把一个科学概念讲得让一个大学新生也能听懂，那就说明我自己对这个概念也是一知半解的。 而费曼的老师也有过一句类似的话 One can only learn by teaching.一个人只有通过教学，才能学会什么。 所以，试着写出深入浅出、通俗易懂的文章，是最有效的学习方法。 仪式感以上两点只是在强调写作对学习的重要性，好像和博客没什么关系，毕竟市面上有很多优秀的笔记类软件能够满足这一需求，并不一定非博客不可。比如有道云笔记、印象笔记、OneNote，这些都很不错，为什么不用这些来写呢？ 因为懒。要把抽象的概念，解释成小白都能听懂的语言，需要优秀的表达能力和扎实的学习功底，这是一件费时费脑的事。更何况写出来的东西，明知道只有自己会去看，那还花那心思打磨它干啥？ 所以写博客能提升的是一种仪式感，虽然博客可能根本没人看，但在写之前，知道这是会发表出去的，就会要求自己把它写得好看一点。这一点对于传统且脸皮薄的我，非常有效。 分享学得更多这是一个很神奇的现象，如果把自己的心得和技巧藏着掖着，害怕别人知道从而超过自己，人就不会进步；但倘若大大方方分享出来，反而不会陷入匮乏，而是得到更多。这很玄乎，你分享了一些东西，听的人也会自然而然分享出自己的干货。 文章发表到博客就是最划算的分享，因为你只用写一次，然后告诉大家你的博客地址就完事了。 个人品牌量变带来质变，如果坚持写下去，总有一天博客会成长起来然后带来收益，就像小树苗长成大树供人乘凉，只要栽培够久。就算它以后挣不了钱也没关系，而且我写博客也不是为了挣钱，它将成为自己努力的见证和思考的结晶，到老了就是一笔个人成就。 如果说等它成长过于漫长，那么至少它可以立刻起到一个装x的作用。比如有朋友遇到一个问题，“这很好解决的，我写过一篇文章，你去我博客看吧。” 选择什么样的博客说完了为什么玩，就到了选择玩哪个的时候了。 MarkDown格式如果你还在用Word写文章，那么你真的已经out很久了。使用MarkDown格式写作，能给人更大的沉浸感，更关键的是，一些博客平台支持MarkDown格式的结构解析，这会使文章看起来很有条理，还有最重要的一点，它是纯文本，方便迁移。 迁移是什么意思呢？假设，你觉得简书这个平台不错，于是你使用Word写了很多篇文章，但之后你觉得简书不好，想把文章放到微信公众号上去，于是你打开Word，把文章复制过去，但突然发现公众号上显示的效果和以前不一样，你说了一句我c，然后一行一行对照着修改回来。 但是，如果你用的是MarkDown格式，那就没有这些烦恼了，无论是博客平台，还是笔记类软件，或者是公众号、知乎，包括我下面说的自己搭建博客，只要你想要，随便哪都可以发，显示效果包你满意。 自己搭建更自由虽然市面上有很多优秀的博客平台，但始终比不上自己搭建的，因为无法做到个性化，大家博客都长一个样，怎么突出自我？也许官方会出几个皮肤，但还要你花钱买。再者，博客的功能只能由官方说了算，想加点自己的东西都不行，这玩起来没多大意思，装x效果也达不到。 反过来，自己搭建一个博客，再申请一个自己的域名做绑定，整个感觉都会不一样。更何况，搭建博客免费且简单。]]></content>
      <categories>
        <category>玩玩博客</category>
      </categories>
      <tags>
        <tag>MarkDown</tag>
      </tags>
  </entry>
</search>
